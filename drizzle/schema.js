"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pricelistPagina = exports.fTable = exports.providerUpc = exports.walmartTopProducts = exports.proveedores = exports.walmartDepartments = exports.tablaEvelynFull = exports.tablaEvelyn = exports.refoundReturns2 = exports.inventory2 = exports.productPackage = exports.walmartId = exports.orderSales2 = exports.pricelistAsiganacionF1 = exports.inventory2His = exports.compradores = exports.prismaMigrations = exports.reporteWill2 = exports.reporteWill = exports.enProcesoHistorial = exports.enProceso = exports.infoproveedor = exports.imagen2 = exports.f3 = exports.f2 = exports.f1 = void 0;
var pg_core_1 = require("drizzle-orm/pg-core");
exports.f1 = (0, pg_core_1.pgTable)("f1", {
    id: (0, pg_core_1.serial)("id_").primaryKey().notNull(),
    idUsuario: (0, pg_core_1.integer)("id_usuario").notNull().references(function () { return exports.compradores.id; }),
    idPricelist: (0, pg_core_1.integer)("id_pricelist").notNull().references(function () { return exports.compradores.id; }),
    distribuidor: (0, pg_core_1.varchar)("distribuidor"),
    linkRentabilidad: (0, pg_core_1.varchar)("link_rentabilidad"),
    productoLinkWalmart: (0, pg_core_1.varchar)("producto_link_walmart"),
    description: (0, pg_core_1.varchar)("description"),
    linkAmazon: (0, pg_core_1.varchar)("link_amazon"),
    upc: (0, pg_core_1.varchar)("upc"),
    upcListing: (0, pg_core_1.varchar)("upc_listing"),
    walmartId: (0, pg_core_1.varchar)("walmart_id"),
    pack: (0, pg_core_1.integer)("pack"),
    packPrice: (0, pg_core_1.numeric)("pack_price", { precision: 3, scale: 2 }),
    itemNumber: (0, pg_core_1.varchar)("item_number"),
    buyBoxPrice: (0, pg_core_1.numeric)("buy_box_price", { precision: 3, scale: 2 }),
    totalGrosFees: (0, pg_core_1.numeric)("total_gros_fees", { precision: 3, scale: 2 }),
    category: (0, pg_core_1.varchar)("category"),
    hazmat: (0, pg_core_1.varchar)("hazmat"),
    weight: (0, pg_core_1.numeric)("weight", { precision: 3, scale: 2 }),
    length: (0, pg_core_1.numeric)("length_", { precision: 3, scale: 2 }),
    width: (0, pg_core_1.numeric)("width", { precision: 3, scale: 2 }),
    height: (0, pg_core_1.numeric)("height", { precision: 3, scale: 2 }),
    lb: (0, pg_core_1.numeric)("lb", { precision: 3, scale: 2 }),
    unitNet: (0, pg_core_1.numeric)("unit_net", { precision: 3, scale: 2 }),
    roi: (0, pg_core_1.numeric)("roi", { precision: 3, scale: 2 }),
    margin: (0, pg_core_1.numeric)("margin", { precision: 3, scale: 2 }),
    netPorcentaje: (0, pg_core_1.numeric)("net_porcentaje", { precision: 3, scale: 2 }),
    walmartSalesDataSpark: (0, pg_core_1.numeric)("walmart_sales_data_spark", { precision: 3, scale: 2 }),
    amazonSales: (0, pg_core_1.numeric)("amazon_sales", { precision: 3, scale: 2 }),
    reviewsTotales: (0, pg_core_1.integer)("reviews_totales"),
    competitiveWfsSellers: (0, pg_core_1.integer)("competitive_wfs_sellers"),
    notes: (0, pg_core_1.varchar)("notes"),
    approval: (0, pg_core_1.varchar)("approval"),
    disapproval: (0, pg_core_1.varchar)("disapproval"),
    fulfillmentFee: (0, pg_core_1.numeric)("fulfillment_fee", { precision: 3, scale: 2 }),
    referralFee: (0, pg_core_1.numeric)("referral_fee", { precision: 3, scale: 2 }),
    cost: (0, pg_core_1.numeric)("cost_", { precision: 3, scale: 2 }),
    monthlyStore: (0, pg_core_1.numeric)("monthly_store", { precision: 3, scale: 2 }),
    fecha: (0, pg_core_1.date)("fecha"),
});
exports.f2 = (0, pg_core_1.pgTable)("f2", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    idF1: (0, pg_core_1.integer)("id_f1").references(function () { return exports.f1.id; }),
    idUsuario: (0, pg_core_1.integer)("id_usuario").references(function () { return exports.compradores.id; }),
    productoLinkWalmart: (0, pg_core_1.varchar)("producto_link_walmart"),
    linkAmazon: (0, pg_core_1.varchar)("link_amazon"),
    description: (0, pg_core_1.varchar)("description"),
    upcDist: (0, pg_core_1.varchar)("upc_dist"),
    walmartId: (0, pg_core_1.varchar)("walmart_id"),
    pack: (0, pg_core_1.integer)("pack"),
    itemNumber: (0, pg_core_1.varchar)("item_number"),
    buyBoxPrice: (0, pg_core_1.numeric)("buy_box_price", { precision: 3, scale: 2 }),
    packPrice: (0, pg_core_1.numeric)("pack_price", { precision: 3, scale: 2 }),
    cost: (0, pg_core_1.numeric)("cost_", { precision: 3, scale: 2 }),
    costFees: (0, pg_core_1.numeric)("cost_fees", { precision: 3, scale: 2 }),
    category: (0, pg_core_1.varchar)("category"),
    totalCost: (0, pg_core_1.numeric)("total_cost", { precision: 3, scale: 2 }),
    totalSales: (0, pg_core_1.numeric)("total_sales", { precision: 3, scale: 2 }),
    net: (0, pg_core_1.numeric)("net", { precision: 3, scale: 2 }),
    unitNet: (0, pg_core_1.numeric)("unit_net", { precision: 3, scale: 2 }),
    roi: (0, pg_core_1.numeric)("roi", { precision: 3, scale: 2 }),
    margin: (0, pg_core_1.numeric)("margin", { precision: 3, scale: 2 }),
    netPorcentaje: (0, pg_core_1.numeric)("net_porcentaje", { precision: 3, scale: 2 }),
    discount: (0, pg_core_1.numeric)("discount", { precision: 3, scale: 2 }),
    discountPorcentaje: (0, pg_core_1.numeric)("discount_porcentaje", { precision: 3, scale: 2 }),
    discountPackPrice: (0, pg_core_1.numeric)("discount_pack_price", { precision: 3, scale: 2 }),
    walmartSalesHelium: (0, pg_core_1.numeric)("walmart_sales_helium", { precision: 3, scale: 2 }),
    walmartSalesDataspark: (0, pg_core_1.numeric)("walmart_sales_dataspark", { precision: 3, scale: 2 }),
    reviews: (0, pg_core_1.numeric)("reviews", { precision: 3, scale: 2 }),
    competitiveWfsSellers: (0, pg_core_1.integer)("competitive_wfs_sellers"),
    amazonSalesAsinzen: (0, pg_core_1.numeric)("amazon_sales_asinzen", { precision: 3, scale: 2 }),
    amazonSalesKeppa: (0, pg_core_1.numeric)("amazon_sales_keppa", { precision: 3, scale: 2 }),
    buyBoxAmazon: (0, pg_core_1.numeric)("buy_box_amazon", { precision: 3, scale: 2 }),
    salesToBuy: (0, pg_core_1.numeric)("sales_to_buy", { precision: 3, scale: 2 }),
    unitsToBuy: (0, pg_core_1.numeric)("units_to_buy", { precision: 3, scale: 2 }),
    buyboxPorcentaje: (0, pg_core_1.numeric)("buybox_porcentaje", { precision: 3, scale: 2 }),
    stockDays: (0, pg_core_1.integer)("stock_days"),
    stockChecker: (0, pg_core_1.integer)("stock_checker"),
    timeMonths: (0, pg_core_1.integer)("time_months"),
    salesMonths: (0, pg_core_1.integer)("sales_months"),
    comments: (0, pg_core_1.varchar)("comments_"),
    notasFiltro1: (0, pg_core_1.varchar)("notas_filtro_1"),
    notaComprasFiltro2: (0, pg_core_1.varchar)("nota_compras_filtro_2"),
    approval: (0, pg_core_1.varchar)("approval"),
    disapproval: (0, pg_core_1.varchar)("disapproval"),
    lb: (0, pg_core_1.numeric)("lb", { precision: 3, scale: 2 }),
    fulfillmentFee: (0, pg_core_1.numeric)("fulfillment_fee", { precision: 3, scale: 2 }),
    referralFee: (0, pg_core_1.integer)("referral_fee"),
    costAux: (0, pg_core_1.numeric)("cost_aux", { precision: 3, scale: 2 }),
    monthlyStore: (0, pg_core_1.numeric)("monthly_store", { precision: 3, scale: 2 }),
    casePack: (0, pg_core_1.integer)("case_pack"),
    upcListing: (0, pg_core_1.varchar)("upc_listing"),
    fecha: (0, pg_core_1.date)("fecha"),
    supplier: (0, pg_core_1.varchar)("supplier"),
    descriptionProduct: (0, pg_core_1.varchar)("description_product"),
    weight: (0, pg_core_1.numeric)("weight", { precision: 3, scale: 2 }),
    length: (0, pg_core_1.numeric)("length_", { precision: 3, scale: 2 }),
    width: (0, pg_core_1.numeric)("width", { precision: 3, scale: 2 }),
    height: (0, pg_core_1.numeric)("height", { precision: 3, scale: 2 }),
    idUnico: (0, pg_core_1.varchar)("id_unico"),
    hazmat: (0, pg_core_1.varchar)("hazmat"),
});
exports.f3 = (0, pg_core_1.pgTable)("f3", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    idF2: (0, pg_core_1.integer)("id_f2").notNull().references(function () { return exports.f2.id; }),
    idUsuario: (0, pg_core_1.integer)("id_usuario").notNull().references(function () { return exports.compradores.id; }),
    supplier: (0, pg_core_1.varchar)("supplier"),
    productoLinkWalmart: (0, pg_core_1.varchar)("producto_link_walmart"),
    linkAmazon: (0, pg_core_1.varchar)("link_amazon"),
    description: (0, pg_core_1.varchar)("description"),
    walmartId: (0, pg_core_1.integer)("walmart_id"),
    pack: (0, pg_core_1.integer)("pack"),
    itemNumber: (0, pg_core_1.varchar)("item_number"),
    upcDist: (0, pg_core_1.varchar)("upc_dist"),
    buyBoxPrice: (0, pg_core_1.numeric)("buy_box_price", { precision: 3, scale: 2 }),
    unitCost: (0, pg_core_1.numeric)("unit_cost", { precision: 3, scale: 2 }),
    totalCostWalmartFees: (0, pg_core_1.numeric)("total_cost_walmart_fees", { precision: 3, scale: 2 }),
    category: (0, pg_core_1.varchar)("category"),
    applyDiscount: (0, pg_core_1.varchar)("apply_discount"),
    totalCost: (0, pg_core_1.numeric)("total_cost", { precision: 3, scale: 2 }),
    totalSales: (0, pg_core_1.numeric)("total_sales", { precision: 3, scale: 2 }),
    unitDiscount: (0, pg_core_1.numeric)("unit_discount", { precision: 3, scale: 2 }),
    discountPackPrice: (0, pg_core_1.numeric)("discount_pack_price", { precision: 3, scale: 2 }),
    net: (0, pg_core_1.numeric)("net", { precision: 3, scale: 2 }),
    unitNet: (0, pg_core_1.numeric)("unit_net", { precision: 3, scale: 2 }),
    roi: (0, pg_core_1.numeric)("roi", { precision: 3, scale: 2 }),
    margin: (0, pg_core_1.numeric)("margin", { precision: 3, scale: 2 }),
    netPorcentaje: (0, pg_core_1.numeric)("net_porcentaje", { precision: 3, scale: 2 }),
    discountPorcentaje: (0, pg_core_1.numeric)("discount_porcentaje", { precision: 3, scale: 2 }),
    walmartSalesHelium: (0, pg_core_1.integer)("walmart_sales_helium"),
    walmartSalesDataSpark: (0, pg_core_1.integer)("walmart_sales_data_spark"),
    reviews: (0, pg_core_1.integer)("reviews"),
    competitiveWfsSellers: (0, pg_core_1.integer)("competitive_wfs_sellers"),
    amazonSalesAsinzen: (0, pg_core_1.integer)("amazon_sales_asinzen"),
    amazonSalesKeppa: (0, pg_core_1.varchar)("amazon_sales_keppa"),
    buyBoxAmazon: (0, pg_core_1.numeric)("buy_box_amazon", { precision: 3, scale: 2 }),
    unitsToBuy: (0, pg_core_1.numeric)("units_to_buy", { precision: 3, scale: 2 }),
    salesToBuy: (0, pg_core_1.numeric)("sales_to_buy", { precision: 3, scale: 2 }),
    buyboxPorcentaje: (0, pg_core_1.numeric)("buybox_porcentaje", { precision: 3, scale: 2 }),
    stockDays: (0, pg_core_1.integer)("stock_days"),
    stockCheckerVentas: (0, pg_core_1.integer)("stock_checker_ventas"),
    timeMonths: (0, pg_core_1.integer)("time_months"),
    salesMonths: (0, pg_core_1.integer)("sales_months"),
    comments: (0, pg_core_1.varchar)("comments_"),
    notaCompras: (0, pg_core_1.varchar)("nota_compras"),
    notaComprasF2: (0, pg_core_1.varchar)("nota_compras_f2"),
    notas: (0, pg_core_1.varchar)("notas"),
    approval: (0, pg_core_1.varchar)("approval"),
    disapproval: (0, pg_core_1.varchar)("disapproval"),
    lb: (0, pg_core_1.numeric)("lb", { precision: 3, scale: 2 }),
    hazmat: (0, pg_core_1.varchar)("hazmat"),
    fulfillmentFee: (0, pg_core_1.numeric)("fulfillment_fee", { precision: 3, scale: 2 }),
    referralFee: (0, pg_core_1.numeric)("referral_fee", { precision: 4, scale: 2 }),
    cost: (0, pg_core_1.numeric)("cost_", { precision: 3, scale: 2 }),
    monthlyStore: (0, pg_core_1.numeric)("monthly_store", { precision: 5, scale: 5 }),
    casePack: (0, pg_core_1.integer)("case_pack"),
    upcListing: (0, pg_core_1.varchar)("upc_listing"),
    descriptionProduct: (0, pg_core_1.varchar)("description_product"),
    lbFiltro1: (0, pg_core_1.numeric)("lb_filtro_1", { precision: 3, scale: 2 }),
    length: (0, pg_core_1.numeric)("length_", { precision: 3, scale: 2 }),
    width: (0, pg_core_1.numeric)("width_", { precision: 3, scale: 2 }),
    height: (0, pg_core_1.numeric)("height_", { precision: 3, scale: 2 }),
    timestampAproval: (0, pg_core_1.varchar)("timestamp_aproval"),
    idAsin: (0, pg_core_1.varchar)("id_asin"),
    idItemNumber: (0, pg_core_1.varchar)("id_item_number"),
    responsableF1: (0, pg_core_1.varchar)("responsable_f1"),
    inventario: (0, pg_core_1.varchar)("inventario"),
});
exports.imagen2 = (0, pg_core_1.pgTable)("imagen2", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    sku: (0, pg_core_1.text)("sku_").references(function () { return exports.inventory2.sku; }),
    imagenUrl: (0, pg_core_1.text)("imagen_url"),
});
exports.infoproveedor = (0, pg_core_1.pgTable)("infoproveedor", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    proveedor: (0, pg_core_1.text)("proveedor"),
    streetAddress: (0, pg_core_1.text)("street_address"),
    responsable: (0, pg_core_1.text)("responsable"),
    city: (0, pg_core_1.text)("city"),
    phone: (0, pg_core_1.text)("phone"),
    mail: (0, pg_core_1.text)("mail"),
    idproveedor: (0, pg_core_1.integer)("idproveedor").references(function () { return exports.proveedores.id; }),
});
exports.enProceso = (0, pg_core_1.pgTable)("en_proceso", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    upcProveedor: (0, pg_core_1.varchar)("upc_proveedor", { length: 14 }).references(function () { return exports.providerUpc.id; }),
    nombre: (0, pg_core_1.varchar)("nombre", { length: 25 }),
    título: (0, pg_core_1.varchar)("título"),
    precio: (0, pg_core_1.doublePrecision)("precio"),
    asignadof1: (0, pg_core_1.varchar)("asignadof1", { length: 25 }),
    fechaasignado: (0, pg_core_1.date)("fechaasignado"),
    revisadof1: (0, pg_core_1.boolean)("revisadof1"),
    revisadof2: (0, pg_core_1.boolean)("revisadof2"),
    revisadof3: (0, pg_core_1.boolean)("revisadof3"),
    emisión: (0, pg_core_1.boolean)("emisión"),
    rechazado: (0, pg_core_1.varchar)("rechazado", { length: 25 }),
    comprado: (0, pg_core_1.boolean)("comprado"),
    mostrar: (0, pg_core_1.varchar)("mostrar", { length: 25 }),
    precioDeWalmart: (0, pg_core_1.doublePrecision)("precio_de_walmart"),
    precioAmazon: (0, pg_core_1.doublePrecision)("precio_amazon"),
    contracCategory: (0, pg_core_1.text)("contrac_category"),
    competidoresWalmartWfs: (0, pg_core_1.integer)("competidores_walmart_wfs"),
    fullfimentFee: (0, pg_core_1.doublePrecision)("fullfiment_fee"),
    referealFee: (0, pg_core_1.doublePrecision)("refereal_fee"),
    netoProbable: (0, pg_core_1.doublePrecision)("neto_probable"),
    idProveedor: (0, pg_core_1.integer)("id_proveedor").references(function () { return exports.proveedores.id; }),
    walmarid: (0, pg_core_1.text)("walmarid"),
    asin: (0, pg_core_1.text)("asin"),
    packageheight: (0, pg_core_1.doublePrecision)("packageheight"),
    packagelength: (0, pg_core_1.doublePrecision)("packagelength"),
    packagewidth: (0, pg_core_1.doublePrecision)("packagewidth"),
    packageweight: (0, pg_core_1.doublePrecision)("packageweight"),
    notas: (0, pg_core_1.text)("notas"),
    cantidadComprar: (0, pg_core_1.integer)("cantidad_comprar"),
    hazmant: (0, pg_core_1.boolean)("hazmant"),
    apperel: (0, pg_core_1.boolean)("apperel"),
    bestseller: (0, pg_core_1.boolean)("bestseller"),
    popularpick: (0, pg_core_1.boolean)("popularpick"),
    case: (0, pg_core_1.integer)("case_"),
    itemNumber: (0, pg_core_1.text)("item_number"),
    revisionF1: (0, pg_core_1.timestamp)("revision_f1", { mode: 'string' }).defaultNow(),
    revisionF2: (0, pg_core_1.timestamp)("revision_f2", { mode: 'string' }),
    revisionF3: (0, pg_core_1.timestamp)("revision_f3", { mode: 'string' }),
    revisionEmision: (0, pg_core_1.timestamp)("revision_emision", { mode: 'string' }),
    asignadof2: (0, pg_core_1.varchar)("asignadof2", { length: 25 }),
    pack: (0, pg_core_1.integer)("pack").default(1),
    revisionInventario: (0, pg_core_1.timestamp)("revision_inventario", { withTimezone: true, mode: 'string' }),
});
exports.enProcesoHistorial = (0, pg_core_1.pgTable)("en_proceso_historial", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    upcProveedor: (0, pg_core_1.varchar)("upc_proveedor", { length: 14 }).references(function () { return exports.providerUpc.id; }),
    nombre: (0, pg_core_1.varchar)("nombre", { length: 25 }),
    título: (0, pg_core_1.varchar)("título"),
    precio: (0, pg_core_1.doublePrecision)("precio"),
    asignadof1: (0, pg_core_1.varchar)("asignadof1", { length: 25 }),
    fechaasignado: (0, pg_core_1.date)("fechaasignado"),
    revisadof1: (0, pg_core_1.boolean)("revisadof1"),
    revisadof2: (0, pg_core_1.boolean)("revisadof2"),
    revisadof3: (0, pg_core_1.boolean)("revisadof3"),
    emisión: (0, pg_core_1.boolean)("emisión"),
    rechazado: (0, pg_core_1.varchar)("rechazado", { length: 25 }),
    comprado: (0, pg_core_1.boolean)("comprado"),
    mostrar: (0, pg_core_1.varchar)("mostrar", { length: 25 }),
    precioDeWalmart: (0, pg_core_1.doublePrecision)("precio_de_walmart"),
    precioAmazon: (0, pg_core_1.doublePrecision)("precio_amazon"),
    contracCategory: (0, pg_core_1.text)("contrac_category"),
    competidoresWalmartWfs: (0, pg_core_1.integer)("competidores_walmart_wfs"),
    fullfimentFee: (0, pg_core_1.doublePrecision)("fullfiment_fee"),
    referealFee: (0, pg_core_1.doublePrecision)("refereal_fee"),
    netoProbable: (0, pg_core_1.doublePrecision)("neto_probable"),
    idProveedor: (0, pg_core_1.integer)("id_proveedor").references(function () { return exports.proveedores.id; }),
    walmarid: (0, pg_core_1.text)("walmarid"),
    asin: (0, pg_core_1.text)("asin"),
    packageheight: (0, pg_core_1.doublePrecision)("packageheight"),
    packagelength: (0, pg_core_1.doublePrecision)("packagelength"),
    packagewidth: (0, pg_core_1.doublePrecision)("packagewidth"),
    packageweight: (0, pg_core_1.doublePrecision)("packageweight"),
    notas: (0, pg_core_1.text)("notas"),
    cantidadComprar: (0, pg_core_1.integer)("cantidad_comprar"),
    hazmant: (0, pg_core_1.boolean)("hazmant"),
    apperel: (0, pg_core_1.boolean)("apperel"),
    bestseller: (0, pg_core_1.boolean)("bestseller"),
    popularpick: (0, pg_core_1.boolean)("popularpick"),
    case: (0, pg_core_1.integer)("case_"),
    itemNumber: (0, pg_core_1.text)("item_number"),
    numberPio: (0, pg_core_1.text)("number_pio"),
    revisionF1: (0, pg_core_1.timestamp)("revision_f1", { mode: 'string' }).defaultNow(),
    revisionF2: (0, pg_core_1.timestamp)("revision_f2", { mode: 'string' }),
    revisionF3: (0, pg_core_1.timestamp)("revision_f3", { mode: 'string' }),
    revisionEmision: (0, pg_core_1.timestamp)("revision_emision", { mode: 'string' }),
    asignadof2: (0, pg_core_1.varchar)("asignadof2", { length: 25 }),
    pack: (0, pg_core_1.integer)("pack"),
    revisionInventario: (0, pg_core_1.timestamp)("revision_inventario", { withTimezone: true, mode: 'string' }),
});
exports.reporteWill = (0, pg_core_1.pgTable)("Reporte_will", {
    revisionF1: (0, pg_core_1.timestamp)("revision_f1", { mode: 'string' }),
    asignadof1: (0, pg_core_1.text)("asignadof1"),
    rechazado: (0, pg_core_1.text)("rechazado"),
    revisadof1: (0, pg_core_1.boolean)("revisadof1"),
    revisadof2: (0, pg_core_1.boolean)("revisadof2"),
});
exports.reporteWill2 = (0, pg_core_1.pgTable)("Reporte_will_2", {
    asignado: (0, pg_core_1.text)("Asignado"),
    // You can use { mode: "bigint" } if numbers are exceeding js number limitations
    total: (0, pg_core_1.bigint)("Total", { mode: "number" }),
    // You can use { mode: "bigint" } if numbers are exceeding js number limitations
    desaprobados: (0, pg_core_1.bigint)("Desaprobados", { mode: "number" }),
    // You can use { mode: "bigint" } if numbers are exceeding js number limitations
    aprovado: (0, pg_core_1.bigint)("Aprovado", { mode: "number" }),
    fecha: (0, pg_core_1.text)("Fecha"),
});
exports.prismaMigrations = (0, pg_core_1.pgTable)("_prisma_migrations", {
    id: (0, pg_core_1.varchar)("id", { length: 36 }).primaryKey().notNull(),
    checksum: (0, pg_core_1.varchar)("checksum", { length: 64 }).notNull(),
    finishedAt: (0, pg_core_1.timestamp)("finished_at", { withTimezone: true, mode: 'string' }),
    migrationName: (0, pg_core_1.varchar)("migration_name", { length: 255 }).notNull(),
    logs: (0, pg_core_1.text)("logs"),
    rolledBackAt: (0, pg_core_1.timestamp)("rolled_back_at", { withTimezone: true, mode: 'string' }),
    startedAt: (0, pg_core_1.timestamp)("started_at", { withTimezone: true, mode: 'string' }).defaultNow().notNull(),
    appliedStepsCount: (0, pg_core_1.integer)("applied_steps_count").default(0).notNull(),
});
exports.compradores = (0, pg_core_1.pgTable)("compradores", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    nombre: (0, pg_core_1.varchar)("nombre"),
    password: (0, pg_core_1.varchar)("password", { length: 30 }),
    usuario: (0, pg_core_1.varchar)("usuario", { length: 255 }),
}, function (table) {
    return {
        compradoresUsuarioKey: (0, pg_core_1.unique)("compradores_usuario_key").on(table.usuario),
    };
});
exports.inventory2His = (0, pg_core_1.pgTable)("inventory2_his", {
    status: (0, pg_core_1.text)("status"),
    upcSupplier: (0, pg_core_1.text)("upc_supplier"),
    gtin: (0, pg_core_1.text)("gtin"),
    sku: (0, pg_core_1.text)("sku").notNull(),
    description: (0, pg_core_1.text)("description"),
    itemId: (0, pg_core_1.text)("item_id"),
    pack: (0, pg_core_1.integer)("pack"),
    itemNumberSupplier: (0, pg_core_1.text)("item_number_supplier"),
    cogs: (0, pg_core_1.doublePrecision)("cogs"),
    cogsInPack: (0, pg_core_1.doublePrecision)("cogs_in_pack"),
    outboundShippingWeight: (0, pg_core_1.doublePrecision)("outbound_shipping_weight"),
    weightLb: (0, pg_core_1.doublePrecision)("weight_lb"),
    unitsConfirm: (0, pg_core_1.doublePrecision)("units_confirm"),
    unitsInWh: (0, pg_core_1.doublePrecision)("units_in_wh"),
    unitsInTransit: (0, pg_core_1.doublePrecision)("units_in_transit"),
    unitsToCharge: (0, pg_core_1.doublePrecision)("units_to_charge"),
    unitsInWm: (0, pg_core_1.doublePrecision)("units_in_wm"),
    packsInWm: (0, pg_core_1.doublePrecision)("packs_in_wm"),
    unitsReturned: (0, pg_core_1.doublePrecision)("units_returned"),
    unitsDamaged: (0, pg_core_1.doublePrecision)("units_damaged"),
    link: (0, pg_core_1.text)("link_"),
    linkAmazon: (0, pg_core_1.text)("link_amazon"),
    categoria: (0, pg_core_1.text)("categoria"),
    lengthIn: (0, pg_core_1.doublePrecision)("length_in"),
    widthIn: (0, pg_core_1.doublePrecision)("width_in"),
    heightIn: (0, pg_core_1.doublePrecision)("height_in"),
    totalCostFees: (0, pg_core_1.doublePrecision)("total_cost_fees"),
    estCommission: (0, pg_core_1.doublePrecision)("est_commission"),
    cogsFee: (0, pg_core_1.doublePrecision)("cogs_fee"),
    hazmat: (0, pg_core_1.text)("hazmat"),
    ohXProduct: (0, pg_core_1.doublePrecision)("oh_x_product"),
    stock: (0, pg_core_1.doublePrecision)("stock"),
    stockValues: (0, pg_core_1.doublePrecision)("stock_values"),
    fechaModificacion: (0, pg_core_1.date)("fecha_modificacion"),
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
});
exports.pricelistAsiganacionF1 = (0, pg_core_1.pgTable)("pricelist_asiganacion_f1", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    idPricelistPagina: (0, pg_core_1.integer)("id_pricelist_pagina").references(function () { return exports.pricelistPagina.id; }),
});
exports.orderSales2 = (0, pg_core_1.pgTable)("order_sales_2", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    fechaCreacion: (0, pg_core_1.date)("fecha_creacion"),
    ordenSalesId: (0, pg_core_1.text)("orden_sales_id"),
    gtim: (0, pg_core_1.text)("gtim"),
    sku: (0, pg_core_1.text)("sku").references(function () { return exports.inventory2.sku; }),
    wmtId: (0, pg_core_1.text)("wmt_id"),
    itemsName: (0, pg_core_1.text)("items_name"),
    quantity: (0, pg_core_1.integer)("quantity"),
    gmv: (0, pg_core_1.doublePrecision)("gmv"),
    orderStatus: (0, pg_core_1.text)("order_status"),
    shippedDate: (0, pg_core_1.date)("shipped_date"),
    shippedFrom: (0, pg_core_1.text)("shipped_from"),
    shipToCity: (0, pg_core_1.text)("ship_to_city"),
    shipToState: (0, pg_core_1.text)("ship_to_state"),
    shipToZip: (0, pg_core_1.text)("ship_to_zip"),
    purchaseOrderNum: (0, pg_core_1.text)("purchase_order_num"),
    neto: (0, pg_core_1.doublePrecision)("neto"),
    cogs: (0, pg_core_1.doublePrecision)("cogs"),
    fees: (0, pg_core_1.doublePrecision)("fees"),
    fechaSql: (0, pg_core_1.date)("fecha_sql"),
    fullFeed: (0, pg_core_1.doublePrecision)("full_feed"),
    referalFeed: (0, pg_core_1.doublePrecision)("referal_feed"),
});
exports.walmartId = (0, pg_core_1.pgTable)("walmart_id", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    itemId: (0, pg_core_1.text)("item_id").notNull(),
    providerUpc: (0, pg_core_1.varchar)("provider_upc", { length: 14 }).references(function () { return exports.providerUpc.id; }),
    timestamp: (0, pg_core_1.timestamp)("timestamp", { mode: 'string' }).defaultNow(),
});
exports.productPackage = (0, pg_core_1.pgTable)("product_package", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    idProviderUpc: (0, pg_core_1.varchar)("id_provider_upc", { length: 14 }).notNull().references(function () { return exports.providerUpc.id; }),
    asin: (0, pg_core_1.text)("asin").notNull(),
    image: (0, pg_core_1.text)("image").notNull(),
    height: (0, pg_core_1.real)("height").notNull(),
    length: (0, pg_core_1.real)("length").notNull(),
    width: (0, pg_core_1.real)("width").notNull(),
    weight: (0, pg_core_1.real)("weight").notNull(),
    quantity: (0, pg_core_1.integer)("quantity").notNull(),
    size: (0, pg_core_1.text)("size"),
    timestamp: (0, pg_core_1.timestamp)("timestamp", { mode: 'string' }).defaultNow().notNull(),
});
exports.inventory2 = (0, pg_core_1.pgTable)("inventory2", {
    status: (0, pg_core_1.text)("status"),
    upcSupplier: (0, pg_core_1.text)("upc_supplier"),
    gtin: (0, pg_core_1.text)("gtin"),
    sku: (0, pg_core_1.text)("sku").primaryKey().notNull(),
    description: (0, pg_core_1.text)("description"),
    itemId: (0, pg_core_1.text)("item_id"),
    pack: (0, pg_core_1.integer)("pack"),
    itemNumberSupplier: (0, pg_core_1.text)("item_number_supplier"),
    cogs: (0, pg_core_1.doublePrecision)("cogs"),
    cogsInPack: (0, pg_core_1.doublePrecision)("cogs_in_pack"),
    outboundShippingWeight: (0, pg_core_1.doublePrecision)("outbound_shipping_weight"),
    weightLb: (0, pg_core_1.doublePrecision)("weight_lb"),
    unitsConfirm: (0, pg_core_1.doublePrecision)("units_confirm"),
    unitsInWh: (0, pg_core_1.doublePrecision)("units_in_wh"),
    unitsInTransit: (0, pg_core_1.doublePrecision)("units_in_transit"),
    unitsToCharge: (0, pg_core_1.doublePrecision)("units_to_charge"),
    unitsInWm: (0, pg_core_1.doublePrecision)("units_in_wm"),
    packsInWm: (0, pg_core_1.doublePrecision)("packs_in_wm"),
    unitsReturned: (0, pg_core_1.doublePrecision)("units_returned"),
    unitsDamaged: (0, pg_core_1.doublePrecision)("units_damaged"),
    link: (0, pg_core_1.text)("link_"),
    linkAmazon: (0, pg_core_1.text)("link_amazon"),
    categoria: (0, pg_core_1.text)("categoria"),
    lengthIn: (0, pg_core_1.doublePrecision)("length_in"),
    widthIn: (0, pg_core_1.doublePrecision)("width_in"),
    heightIn: (0, pg_core_1.doublePrecision)("height_in"),
    totalCostFees: (0, pg_core_1.doublePrecision)("total_cost_fees"),
    estCommission: (0, pg_core_1.doublePrecision)("est_commission"),
    cogsFee: (0, pg_core_1.doublePrecision)("cogs_fee"),
    hazmat: (0, pg_core_1.text)("hazmat"),
    ohXProduct: (0, pg_core_1.doublePrecision)("oh_x_product"),
    stock: (0, pg_core_1.doublePrecision)("stock"),
    stockValues: (0, pg_core_1.doublePrecision)("stock_values"),
    brand: (0, pg_core_1.text)("brand"),
});
exports.refoundReturns2 = (0, pg_core_1.pgTable)("refound_returns_2", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    orderId: (0, pg_core_1.text)("order_id"),
    producName: (0, pg_core_1.text)("produc_name"),
    returnReason: (0, pg_core_1.text)("return_reason"),
    returnDate: (0, pg_core_1.date)("return_date"),
    currentSatatus: (0, pg_core_1.text)("current_satatus"),
    unit: (0, pg_core_1.integer)("unit"),
    po: (0, pg_core_1.text)("po"),
    poLine: (0, pg_core_1.integer)("po_line"),
    rma: (0, pg_core_1.text)("rma"),
    returnOrdenLine: (0, pg_core_1.integer)("return_orden_line"),
    fault: (0, pg_core_1.text)("fault"),
    deliveredDate: (0, pg_core_1.date)("delivered_date"),
    receivedScanDate: (0, pg_core_1.date)("received_scan_date"),
    disposition: (0, pg_core_1.text)("disposition"),
    itemCondition: (0, pg_core_1.text)("item_condition"),
    upc: (0, pg_core_1.text)("upc_"),
    currentTrackingStatus: (0, pg_core_1.text)("current_tracking_status"),
    shipping: (0, pg_core_1.doublePrecision)("Shipping"),
});
exports.tablaEvelyn = (0, pg_core_1.pgTable)("tabla_evelyn", {
    orderId: (0, pg_core_1.text)("order_id"),
    sku: (0, pg_core_1.text)("sku"),
    fechaCreacion: (0, pg_core_1.date)("fecha_creacion"),
    quantity: (0, pg_core_1.integer)("quantity"),
    gmv: (0, pg_core_1.doublePrecision)("gmv"),
    cogs: (0, pg_core_1.doublePrecision)("cogs"),
    fullFeed: (0, pg_core_1.doublePrecision)("full_feed"),
    neto: (0, pg_core_1.doublePrecision)("neto"),
    fechaEntrega: (0, pg_core_1.date)("fecha_entrega"),
});
exports.tablaEvelynFull = (0, pg_core_1.pgTable)("tabla_evelyn_full", {
    orderId: (0, pg_core_1.text)("order_id"),
    sku: (0, pg_core_1.text)("sku"),
    fechaCreacion: (0, pg_core_1.date)("fecha_creacion"),
    quantity: (0, pg_core_1.integer)("quantity"),
    gmv: (0, pg_core_1.doublePrecision)("gmv"),
    cogs: (0, pg_core_1.doublePrecision)("cogs"),
    fullFeed: (0, pg_core_1.doublePrecision)("full_feed"),
    neto: (0, pg_core_1.doublePrecision)("neto"),
    fechaEntrega: (0, pg_core_1.date)("fecha_entrega"),
});
exports.walmartDepartments = (0, pg_core_1.pgTable)("walmart_departments", {
    id: (0, pg_core_1.integer)("id").primaryKey().notNull(),
    department: (0, pg_core_1.text)("department").notNull(),
    superDepartmentNumber: (0, pg_core_1.integer)("super_department_number").notNull(),
    superDepartmentName: (0, pg_core_1.text)("super_department_name").notNull(),
    superDepartmentsId: (0, pg_core_1.integer)("super_departments_id").notNull(),
    updateAt: (0, pg_core_1.timestamp)("update_at", { mode: 'string' }).defaultNow(),
});
exports.proveedores = (0, pg_core_1.pgTable)("proveedores", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    nombre: (0, pg_core_1.varchar)("nombre"),
    descuento: (0, pg_core_1.doublePrecision)("descuento"),
});
exports.walmartTopProducts = (0, pg_core_1.pgTable)("walmart_top_products", {
    id: (0, pg_core_1.integer)("id").primaryKey().notNull(),
    departmentId: (0, pg_core_1.integer)("department_id").notNull().references(function () { return exports.walmartDepartments.id; }),
    categoryName: (0, pg_core_1.text)("category_name").notNull(),
    subCategoryName: (0, pg_core_1.text)("sub_category_name").notNull(),
    productName: (0, pg_core_1.text)("product_name").notNull(),
    isTwoDayEligible: (0, pg_core_1.integer)("is_two_day_eligible").notNull(),
    totalOffers: (0, pg_core_1.integer)("total_offers").notNull(),
    isbn: (0, pg_core_1.text)("isbn").notNull(),
    issn: (0, pg_core_1.text)("issn").notNull(),
    existsForSeller: (0, pg_core_1.integer)("exists_for_seller").notNull(),
    rank: (0, pg_core_1.integer)("rank").notNull(),
    brand: (0, pg_core_1.text)("brand").notNull(),
    updateAt: (0, pg_core_1.timestamp)("update_at", { mode: 'string' }).defaultNow(),
});
exports.providerUpc = (0, pg_core_1.pgTable)("provider_upc", {
    id: (0, pg_core_1.varchar)("id", { length: 14 }).primaryKey().notNull(),
    ean: (0, pg_core_1.varchar)("ean", { length: 14 }),
    upc: (0, pg_core_1.varchar)("upc", { length: 14 }),
    product: (0, pg_core_1.text)("product"),
    brand: (0, pg_core_1.text)("brand"),
    category: (0, pg_core_1.text)("category"),
    image: (0, pg_core_1.text)("image"),
    statusCode: (0, pg_core_1.integer)("status_code"),
    timestamp: (0, pg_core_1.timestamp)("timestamp", { mode: 'string' }).defaultNow(),
    gtin: (0, pg_core_1.varchar)("gtin", { length: 14 }),
});
exports.fTable = (0, pg_core_1.pgTable)("F_Table", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    fulfilmentFee: (0, pg_core_1.doublePrecision)("fulfilment_fee"),
    referalFeed: (0, pg_core_1.doublePrecision)("referal_feed"),
    sku: (0, pg_core_1.text)("sku_").references(function () { return exports.inventory2.sku; }),
}, function (table) {
    return {
        fTableSkuKey: (0, pg_core_1.unique)("F_Table_sku__key").on(table.sku),
    };
});
exports.pricelistPagina = (0, pg_core_1.pgTable)("pricelist_pagina", {
    id: (0, pg_core_1.serial)("id").primaryKey().notNull(),
    upcProveedor: (0, pg_core_1.varchar)("upc_proveedor", { length: 15 }).references(function () { return exports.providerUpc.id; }),
    nombre: (0, pg_core_1.varchar)("nombre", { length: 25 }),
    título: (0, pg_core_1.varchar)("título"),
    precio: (0, pg_core_1.doublePrecision)("precio"),
    asignadof1: (0, pg_core_1.varchar)("asignadof1", { length: 25 }),
    fechaasignado: (0, pg_core_1.date)("fechaasignado"),
    revisadof1: (0, pg_core_1.boolean)("revisadof1"),
    revisadof2: (0, pg_core_1.boolean)("revisadof2"),
    revisadof3: (0, pg_core_1.boolean)("revisadof3"),
    emisión: (0, pg_core_1.boolean)("emisión"),
    rechazado: (0, pg_core_1.varchar)("rechazado", { length: 25 }),
    comprado: (0, pg_core_1.boolean)("comprado"),
    revisionF1: (0, pg_core_1.date)("revision_f1"),
    revisionF2: (0, pg_core_1.date)("revision_f2"),
    revisionF3: (0, pg_core_1.date)("revision_f3"),
    revisionEmision: (0, pg_core_1.date)("revision_emision"),
    idProveedor: (0, pg_core_1.integer)("id_proveedor").references(function () { return exports.proveedores.id; }),
    inventario: (0, pg_core_1.boolean)("inventario"),
    case: (0, pg_core_1.integer)("case_"),
    itemNumber: (0, pg_core_1.varchar)("item_number"),
    asignadof2: (0, pg_core_1.varchar)("asignadof2", { length: 25 }),
});
